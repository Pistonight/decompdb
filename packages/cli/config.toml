[paths]
elf = "../../../botw-decomp/build/uking"
compdb = "../../../botw-decomp/build/compile_commands.json"
system-header-paths = [
    "../../../botw-decomp/toolchain/clang-4.0.1/include/c++/v1"
]
extract-output = "dejj"

[paths.functions-csv]
path = "../../../botw-decomp/data/uking_functions.csv"
base-address = 0x7100000000
address-column = 0
symbol-column = 3
skip-rows = 1

[paths.data-csv]
path = "../../../botw-decomp/data/data_symbols.csv"
base-address = 0x7100000000
address-column = 0 
symbol-column = 1

[extract]
pointer-width = 64
ptmd-repr = ["u64", 1]
ptmf-repr = ["u64", 2]
vfptr-field-regex = "^_vptr\\$"

[extract.type-parser]
abandon-typedefs = [
    # these may have unparsable consteval expressions in the templates
    "^std::__1::aligned_storage_t",
    "^std::__1::conditional_t",
    "^std::__1::add_pointer_t",
    "^std::__1::remove_reference_t",
    "^std::__1::__optional_sfinae_assign_base_t",
    "^std::__1::__optional_sfinae_ctor_base_t",
]

[extract.name-resolution]
rules = []
test = []

# [extract.type-optimizer.pick-union-member]
# "uking::ui::PouchItem::Data" = "cook"
# "fpos_t" = "__opaque"
#
#
# [extract.name-resolution.override]
# # de-templatize
# "^sead::OffsetList<.*>$" = "sead::OffsetList"
# "^sead::DelegateEvent<.*>$" = "sead::DelegateEvent"

# [extract.type-optimizer.opaque-if]
# name-matches = [
#     "^std::__va_list$", 
# ]
# struct-member-name-contains = [
#     "__clang"
# ]

